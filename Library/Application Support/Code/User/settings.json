// Place your settings in this file to overwrite the default settings
{
  "files.associations": {
    "*.pml": "c",
    "*.ml": "ocaml",
    "jbuild": "lisp"
  },
  "files.exclude": {
    "**/.gtm": true, // git time metrics
    "**/_build": true // ocamlbuild
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "editor.renderFinalNewline": false, // seems to have no effect?
  "editor.wordWrap": "on",
  // "editor.cursorStyle": "block-outline",
  "editor.cursorBlinking": "solid",
  "extensions.autoUpdate": true,
  "workbench.quickOpen.closeOnFocusLost": false,
  "workbench.statusBar.visible": true,
  "editor.renderLineHighlight": "gutter",
  "window.zoomLevel": 0,
  "files.hotExit": "onExitAndWindowClose",
  "window.restoreWindows": "all",
  "editor.autoIndent": true,
  // "editor.formatOnPaste": false,
  // "editor.formatOnType": false,
  "typescript.referencesCodeLens.enabled": true,
  "json.schemas": [
    {
      "fileMatch": [
        "manifest.json"
      ],
      "url": "http://json.schemastore.org/chrome-manifest"
    },
    {
      "fileMatch": [
        "package.json"
      ],
      "url": "http://json.schemastore.org/package"
    }
  ],
  "editor.minimap.enabled": true,
  // "editor.dragAndDrop": true,
  "window.title": "${rootPath}${separator}${activeEditorMedium}",
  "workbench.editor.tabCloseButton": "off",
  "git.confirmSync": false,
  "editor.selectionHighlight": true,
  "editor.occurrencesHighlight": true,
  // "latex-workshop.linter": true,

  "vim.leader": ",",
  "vim.useSystemClipboard": true,
  "vim.overrideCopy": false, // otherwise cmd-c doesn't copy
  "vim.highlightedyank.enable": true,
  // "vim.handleKeys": { "<C-d>": false},
  "vim.changeWordIncludesWhitespace": true,
  // vim.surround: d s <existing char>, c s <existing char> <desired char>, y s <motion> <desired char>, S <desired char> (visual mode)
  // vim-indent-object: <op>ii this indentation level, <op>ai ..and line above, <op>aI ..and line after
  "vim.camelCaseMotion.enable": true,
  "vim.easymotion": true,
  "vim.easymotionMarkerYOffset": 5,
  "vim.easymotionMarkerHeight": 20,
  "vim.easymotionMarkerWidthPerChar": 10,
  "vim.easymotionMarkerFontSize": "16",
  "vim.easymotionMarkerFontFamily": "Menlo",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
        "before": [":"],
        "commands": [
            "workbench.action.showCommands",
        ]
    }
  ],
  "editor.renderControlCharacters": false,
  "editor.renderWhitespace": "none",
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "editor.fontSize": 16,
  "editor.autoClosingBrackets": "languageDefined",
  "editor.minimap.showSlider": "always",
  // "gitlens.stashExplorer.enabled": true,
  // "gitlens.blame.line.enabled": false,
  // "gitlens.codeLens.enabled": false,
  // "gitlens.stashExplorer.enabled": false,
  "git.enableSmartCommit": true,
  "terminal.integrated.fontSize": 16,
  "search.useIgnoreFiles": true,
  "explorer.confirmDelete": false,
  "search.smartCase": true,
  "terminal.integrated.macOptionIsMeta": true,
  "git.autofetch": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "latex-workshop.message.update.show": false,
  "workbench.colorTheme": "One Dark Pro",
  // default terminal colors looked ugly in vim
  // https://glitchbone.github.io/vscode-base16-term/#/onedark
  // used the above and changed terminal.ansiBrightBlack (vim background)
  "workbench.colorCustomizations": {
    "terminal.background":"#282C34",
    "terminal.foreground":"#ABB2BF",
    "terminalCursor.background":"#ABB2BF",
    "terminalCursor.foreground":"#ABB2BF",
    "terminal.ansiBlack":"#282C34",
    "terminal.ansiBlue":"#61AFEF",
    "terminal.ansiBrightBlack":"#21252b",
    "terminal.ansiBrightBlue":"#61AFEF",
    "terminal.ansiBrightCyan":"#56B6C2",
    "terminal.ansiBrightGreen":"#98C379",
    "terminal.ansiBrightMagenta":"#C678DD",
    "terminal.ansiBrightRed":"#E06C75",
    "terminal.ansiBrightWhite":"#C8CCD4",
    "terminal.ansiBrightYellow":"#E5C07B",
    "terminal.ansiCyan":"#56B6C2",
    "terminal.ansiGreen":"#98C379",
    "terminal.ansiMagenta":"#C678DD",
    "terminal.ansiRed":"#E06C75",
    "terminal.ansiWhite":"#ABB2BF",
    "terminal.ansiYellow":"#E5C07B"
  },
  "editor.mouseWheelZoom": true,
  "editor.suggest.filteredTypes": {
    // "keyword": false // used this for OCaml, but is annoying with TypeScript since primitive types are registered as keywords, such that e.g. string gets corrected to String when typing ; or , with editor.acceptSuggestionOnCommitCharacter.
  },
  // "reason.codelens.enabled": true,
  "macros": {
    "commentDown": [
        "editor.action.copyLinesDownAction",
        "cursorUp",
        "editor.action.addCommentLine",
        "cursorDown"
    ],
  },
  "sync.gist": "4e2e7c219f8055bec087c8897372d80f",
  "sync.autoUpload": true,
  "vsicons.dontShowNewVersionMessage": true,
  "diffEditor.renderSideBySide": false,
  "sync.forceUpload": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "gitlens.currentLine.scrollable": false,
  "gitlens.blame.ignoreWhitespace": true,
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "latex-workshop.view.pdf.viewer": "tab",
  "latex-workshop.intellisense.package.enabled": true,
  "latex-workshop.chktex.enabled": true,
  "latex-workshop.view.pdf.tab.editorGroup": "left",
}

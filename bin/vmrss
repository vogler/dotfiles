#!/usr/bin/env zsh

# Print the Virtual Memory Resident Set Size (physical memory used) of a pid and all processes it spawned.
# From https://github.com/ThePrimeagen/vmrss/issues/6 since original didn't work on macOS since it relied on /proc
# Details about types of memory: https://poby.medium.com/linux-memory-demystified-eb33e81699b2

# enable pid completion, e.g. `vmrss nvim<TAB>`, needs to be put in .zshrc
# compdef _pids vmrss

if [[ $# -eq 0 ]]; then
    echo "usage: ${0:t} <pidlist>"
    exit 1
fi

if ! kill -0 "$@" &>/dev/null; then
    echo "error: invalid process ID(s)"
    exit 1
fi

# $1= pid
print_vmrss() {
    res=(${(s: :):-$(ps -p $1 -o pid=,rss=,comm=)})
    res[2]=$((res[2] / 1024.0))
    printf '%s(%s): %s MB\n' "${res[3,-1]:-}" ${res[1]:-$1} ${res[2]:-0}
    REPLY=res[2]
}

# $1= idx
print_spc() {
    printf "${(l:$(($1*2)):: :)}"
}

# $1= idx, $2=pid
run() {
    print_spc $1
    print_vmrss $2
    total=$((total + REPLY))
    for child in $(pgrep -P $2); do
        run $(($1+1)) $child
    done
}

idx=0
total=0
pids=("$@")
for pid in $pids; do
    run $idx $pid
done
printf 'total: %s MB\n' $total

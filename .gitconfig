[user]
    name = Ralf Vogler
    email = ralf.vogler@gmail.com
    username = vogler
[credential]
    helper = osxkeychain
[credential "https://github.com"]
    username = vogler
[credential "https://bitbucket.org"]
    username = vogler
[credential "https://versioncontrolseidl.in.tum.de"]
    username = vogler
[github]
    user = vogler
[hub]
    protocol = https
[core]
    editor = vim
    excludesfile = ~/.gitignore_global
    autocrlf = input
    safecrlf = true
    ignorecase = true
    # pager = diff-so-fancy | less --tabs=4 -RFX --pattern='^(added|deleted|modified): '
[pager]
    # log = diff-so-fancy | less --tabs=4 -RFX --pattern='^Commit: '
    log = diff-so-fancy | less --tabs=4 -RFX
    # diff = diff-so-fancy | less --tabs=4 -RFX --pattern='^(added|deleted|modified): '
    diff = diff-so-fancy | less --tabs=4 -RFX
    show = diff-so-fancy | less --tabs=4 -RFX
[push]
    default = current
[color]
    ui = auto
[color "diff-highlight"]
    oldNormal = red
    oldHighlight = "124 208"
    newNormal = green
    newHighlight = "29 148"
[merge]
    tool = meld
[rebase]
    autostash = true
#This will add the fixup command to git
#git fixup $commit will use your current index to fixup the specified commit
#This is done by doing git commit --fixup $commit and then using rebase with autosquash
#Based upon http://stackoverflow.com/a/21148981/460564
[alias]
    fixup = "!sh -c '(git diff-files --quiet || (echo Unstaged changes, please commit or stash with --keep-index; exit 1)) && COMMIT=$(git rev-parse $1) && git commit --fixup=$COMMIT && git rebase -i --autosquash $COMMIT~1' -"
    root = !pwd
    exec = "!exec "
    stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git stash store -m \"$2\" $rev; }; _"
    jump = !/usr/local/opt/git/share/git-core/contrib/git-jump/git-jump
[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true
[interactive]
    singleKey = true
    diffFilter = diff-so-fancy
# https://github.com/blog/2188-git-2-9-has-been-released
[diff]
    compactionHeuristic = true
    submodule = log
    indentHeuristic = true
[submodule]
    fetchJobs = 0
